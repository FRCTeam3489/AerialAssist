// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3489.CommandBasedRobot2.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc3489.CommandBasedRobot2.Robot;
/**
 *
 */
public class  Reader extends Command {
    public Reader() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.ultra);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        SmartDashboard.putString("two", "words");
        double distance = Robot.ultra.conversion();
        double distance2 = Robot.ultra2.conversion();
        double averageDistance = (distance + distance2) / 2;
        SmartDashboard.putNumber("Ultra Ft. = ", distance);
        SmartDashboard.putNumber("Ultra2 Ft. = ", distance2);
        SmartDashboard.putNumber("Averaged Ft. = ", averageDistance);
        
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        //John- Return True, will not run non-stop
        return false;
    }
    // Called once after isFinished returns true
    protected void end() {
        //John-add subsystem to free resources
        Robot.ultra.turnoff();
        Robot.ultra2.turnoff();
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
